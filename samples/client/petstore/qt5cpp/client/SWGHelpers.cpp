/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#include "SWGHelpers.h"
#include "SWGObject.h"
#include <QDebug>
#include <QJsonArray>
#include <QJsonValue>
#include <QDateTime>


namespace Swagger {


QString
stringValue(QByteArray value) {
    return value;
}

QString
stringValue(QString value) {
    return value;
}

QString
stringValue(qint32 value) {
    return QString::number(value);
}

QString
stringValue(qint64 value) {
    return QString::number(value);
}

QString
stringValue(bool value) {
    return QString(value ? "true" : "false");
}

void toPrimitiveValue(bool &output, const QString &value)
{
    if (value.compare("true", Qt::CaseInsensitive) == 0) {
        output = true;
        return;
    }
    output = false;
}

void toPrimitiveValue(QString &output, const QString &value)
{
    output = QString(value);
}

void toPrimitiveValue(qint32 &output, const QString &value)
{
    output = value.toInt();
}

void toPrimitiveValue(qint64 &output, const QString &value)
{
    output = value.toLong();
}

SWGClientConfig::SWGClientConfig(QString baseUrl)
{
    this->baseUrl = baseUrl;
}

}

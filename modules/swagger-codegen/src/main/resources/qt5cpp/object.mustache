{{>licenseInfo}}
#ifndef _{{prefix}}_OBJECT_H_
#define _{{prefix}}_OBJECT_H_

#include <QSharedPointer>
#include <QJsonValue>
#include <QJsonObject>
#include <QJsonDocument>

{{#cppNamespaceDeclarations}}
namespace {{this}} {
{{/cppNamespaceDeclarations}}

class {{prefix}}Object {
public:
    virtual ~{{prefix}}Object() {}

    virtual QString asJson () const {
        return QJsonDocument(mGenericData).toJson(QJsonDocument::Compact);
    }
    virtual QJsonObject asJsonObject() const {
        return mGenericData;
    }
    virtual void fromJsonObject(QJsonObject const &json) {
        mGenericData = json;
    }
    virtual void fromJson(QString const &jsonString) {
        mGenericData = QJsonDocument::fromJson(jsonString.toLocal8Bit()).object();
    }
    virtual bool isSet() const {
        return mGenericData.isEmpty();
    }
protected:
    QJsonObject mGenericData;
};

{{#cppNamespaceDeclarations}}
}
{{/cppNamespaceDeclarations}}

#endif /* _{{prefix}}_OBJECT_H_ */
